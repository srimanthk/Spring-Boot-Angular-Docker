{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/unit.component.css","./src/app/unit.component.html","./src/app/unit.component.ts","./src/app/unit.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <app-unit></app-unit>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent }  from './app.component';\nimport { UnitComponent }  from './unit.component';\nimport { UnitConversionService } from './unit.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UnitComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [\n    UnitConversionService\n   ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/unit.component.css\n// module id = ./src/app/unit.component.css\n// module chunks = main","module.exports = \"<div>\\n  <h2>Temperature</h2>\\n  <input #textbox1 type=\\\"number\\\" [(ngModel)]=\\\"tInput\\\" min=\\\"1\\\" required>\\n  <button (click)=\\\"temperatureConversion(textbox1.value, 'ceToF')\\\">Celsius To Fahrenheit</button>\\n  <button (click)=\\\"temperatureConversion(textbox1.value, 'fToCe')\\\">Fahrenheit To Celsius</button>\\n  <h3>Result: {{tOutPut}} </h3>\\n</div>\\n\\n<div>\\n  <h2>Weight</h2>\\n  <input #textbox2 type=\\\"number\\\" [(ngModel)]=\\\"wInput\\\" min=\\\"1\\\" required>\\n  <button (click)=\\\"weightConversion(textbox2.value, 'kgToLb')\\\">Kilograms To Pounds</button>\\n  <button (click)=\\\"weightConversion(textbox2.value, 'lbToKg')\\\">Pounds To Kilograms</button>\\n  <h3>Result: {{wOutPut}} </h3>\\n</div>\\n\\n<div>\\n  <h2>Distance</h2>\\n  <input #textbox3 type=\\\"number\\\" [(ngModel)]=\\\"dInput\\\" min=\\\"1\\\" required>\\n  <button (click)=\\\"distanceConversion(textbox3.value, 'kmToMi')\\\">Kilometers To Miles</button>\\n  <button (click)=\\\"distanceConversion(textbox3.value, 'miToKm')\\\">Miles To Kilometers</button>\\n  <h3>Result: {{dOutPut}} </h3>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/unit.component.html\n// module id = ./src/app/unit.component.html\n// module chunks = main","import {\n    Component,\n    OnInit\n} from '@angular/core';\nimport {\n    FormControl,\n    FormGroup,\n    Validators\n} from '@angular/forms';\n\nimport {\n    UnitConversionService\n} from './unit.service';\nimport {\n    Unit\n} from './unit';\n\n@Component({\n    selector: 'app-unit',\n    templateUrl: './unit.component.html',\n    styleUrls: ['./unit.component.css']\n})\nexport class UnitComponent implements OnInit {\n    //Component properties\n    tInput = null;\n    tOutPut = null;\n    wInput = null;\n    wOutPut = null;\n    dInput = null;\n    dOutPut = null;\n\n    statusCode: number;\n\n    //Create constructor to get service instance\n    constructor(private unitConversionService: UnitConversionService) {}\n\n    ngOnInit() {}\n\n    //Temperature\n    temperatureConversion(tInput: string, convertType: string) {\n        this.statusCode = null;\n        this.unitConversionService.temperatureConversion(tInput, convertType)\n            .subscribe(unit => {\n                    this.tOutPut = unit.result;\n                },\n                errorCode => this.statusCode = errorCode);\n    }\n\n    //Weight\n    weightConversion(wInput: string, convertType: string) {\n        this.statusCode = null;\n        this.unitConversionService.weightConversion(wInput, convertType)\n            .subscribe(unit => {\n                    this.wOutPut = unit.result;\n                },\n                errorCode => this.statusCode = errorCode);\n    }\n\n    //Distance\n    distanceConversion(dInput: string, convertType: string) {\n        this.statusCode = null;\n        this.unitConversionService.distanceConversion(dInput, convertType)\n            .subscribe(unit => {\n                    this.dOutPut = unit.result;\n                },\n                errorCode => this.statusCode = errorCode);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit.component.ts","import {\n    Injectable\n} from '@angular/core';\nimport {\n    Http,\n    Response,\n    Headers,\n    URLSearchParams,\n    RequestOptions\n} from '@angular/http';\nimport {\n    Observable\n} from 'rxjs';\n\nimport {\n    Unit\n} from './unit';\n\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class UnitConversionService {\n    //URLs for CRUD operations\n    temperatureUrl = '/api/unitconversion/temperature';\n    weightUrl = '/api/unitconversion/weight';\n    distanceUrl = '/api/unitconversion/distance';\n    //Create constructor to get Http instance\n    constructor(private http: Http) {}\n\n\n    temperatureConversion(input: string, convertType: string): Observable < Unit > {\n        let cpHeaders = new Headers({\n            'Content-Type': 'application/json'\n        });\n        let cpParams = new URLSearchParams();\n        cpParams.append('input', input);\n        cpParams.append('convertType', convertType);\n        let options = new RequestOptions({\n            headers: cpHeaders,\n            search: cpParams\n        });\n        return this.http.get(this.temperatureUrl, options)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    weightConversion(input: string, convertType: string): Observable < Unit > {\n        let cpHeaders = new Headers({\n            'Content-Type': 'application/json'\n        });\n        let cpParams = new URLSearchParams();\n        cpParams.append('input', input);\n        cpParams.append('convertType', convertType);\n        let options = new RequestOptions({\n            headers: cpHeaders,\n            search: cpParams\n        });\n        return this.http.get(this.weightUrl, options)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    distanceConversion(input: string, convertType: string): Observable < Unit > {\n        let cpHeaders = new Headers({\n            'Content-Type': 'application/json'\n        });\n        let cpParams = new URLSearchParams();\n        cpParams.append('input', input);\n        cpParams.append('convertType', convertType);\n        let options = new RequestOptions({\n            headers: cpHeaders,\n            search: cpParams\n        });\n        return this.http.get(this.distanceUrl, options)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n        return body;\n    }\n    private handleError(error: Response | any) {\n        console.error(error.message || error);\n        return Observable.throw(error.status);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/unit.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}